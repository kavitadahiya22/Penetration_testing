#!/bin/bash

# Cybrty Pentest Service - Docker Setup Script
# This script sets up and runs the production environment

set -e

echo "üîß Setting up Cybrty Pentest Service..."

# Create data directories
echo "üìÅ Creating data directories..."
mkdir -p ./data/opensearch
mkdir -p ./data/ollama
mkdir -p ./data/artifacts

# Set permissions
echo "üîê Setting permissions..."
chmod 755 ./data/opensearch
chmod 755 ./data/ollama
chmod 755 ./data/artifacts

# Check if Docker is running
if ! docker info >/dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker first."
    exit 1
fi

# Function to check if service is healthy
check_service_health() {
    local service=$1
    local max_attempts=30
    local attempt=1
    
    echo "‚è≥ Waiting for $service to be healthy..."
    
    while [ $attempt -le $max_attempts ]; do
        if docker-compose -f docker/docker-compose.prod.yml ps $service | grep -q "healthy"; then
            echo "‚úÖ $service is healthy!"
            return 0
        fi
        
        if [ $attempt -eq 1 ]; then
            echo -n "Checking"
        fi
        echo -n "."
        sleep 2
        attempt=$((attempt + 1))
    done
    
    echo ""
    echo "‚ùå $service failed to become healthy within $((max_attempts * 2)) seconds"
    return 1
}

# Start the services
echo "üöÄ Starting services..."
docker-compose -f docker/docker-compose.prod.yml up -d opensearch ollama

# Wait for services to be healthy
check_service_health opensearch
check_service_health ollama

# Initialize Ollama model
echo "ü§ñ Initializing AI model..."
docker-compose -f docker/docker-compose.prod.yml --profile init up model-init

# Start the API
echo "üåê Starting API service..."
docker-compose -f docker/docker-compose.prod.yml up -d api

# Wait for API to be healthy
check_service_health api

echo ""
echo "üéâ Cybrty Pentest Service is ready!"
echo ""
echo "üìä Service URLs:"
echo "  ‚Ä¢ API: http://localhost:8000"
echo "  ‚Ä¢ API Docs: http://localhost:8000/docs"
echo "  ‚Ä¢ Health Check: http://localhost:8000/api/v1/healthz"
echo "  ‚Ä¢ OpenSearch: http://localhost:9200"
echo "  ‚Ä¢ Ollama: http://localhost:11434"
echo ""
echo "üîç View logs:"
echo "  docker-compose -f docker/docker-compose.prod.yml logs -f api"
echo ""
echo "üõë Stop services:"
echo "  docker-compose -f docker/docker-compose.prod.yml down"
echo ""
echo "üìã Optional: Start OpenSearch Dashboards"
echo "  docker-compose -f docker/docker-compose.prod.yml --profile dashboards up -d dashboards"
echo "  Then visit: http://localhost:5601"
