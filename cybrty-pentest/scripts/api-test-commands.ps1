# Cybrty Pentest API - PowerShell Testing Commands
# This script contains PowerShell commands for testing both local and Azure deployments

Write-Host "üß™ Cybrty Pentest API - Testing Commands" -ForegroundColor Cyan
Write-Host "=======================================" -ForegroundColor Cyan

# Local Development Environment
Write-Host "`nüè† Local Environment (Docker)" -ForegroundColor Green
Write-Host "Main API:" -ForegroundColor Yellow
Write-Host 'Invoke-RestMethod -Uri "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/" -Method GET' -ForegroundColor White

Write-Host "`nHealth Check:" -ForegroundColor Yellow  
Write-Host 'Invoke-RestMethod -Uri "http://localhost:8080/api/v1/health" -Method GET' -ForegroundColor White

Write-Host "`nOpen API Docs:" -ForegroundColor Yellow
Write-Host 'Start-Process "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/docs"' -ForegroundColor White

# Azure Production Environment
Write-Host "`n‚òÅÔ∏è Azure Container Apps (Production)" -ForegroundColor Blue
Write-Host "Main API:" -ForegroundColor Yellow
Write-Host 'Invoke-RestMethod -Uri "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/" -Method GET' -ForegroundColor White

Write-Host "`nHealth Check:" -ForegroundColor Yellow
Write-Host 'Invoke-RestMethod -Uri "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/health" -Method GET' -ForegroundColor White

Write-Host "`nOpen API Docs:" -ForegroundColor Yellow
Write-Host 'Start-Process "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/docs"' -ForegroundColor White

Write-Host "`nüí° Usage Instructions:" -ForegroundColor Magenta
Write-Host "- Copy and paste the commands above into PowerShell" -ForegroundColor Gray
Write-Host "- Or run this script to see all available commands" -ForegroundColor Gray
Write-Host "- Local commands work when Docker containers are running" -ForegroundColor Gray
Write-Host "- Azure commands work anytime (production deployment)" -ForegroundColor Gray

# Functions for easy testing
function Test-LocalAPI {
    Write-Host "Testing Local API..." -ForegroundColor Yellow
    try {
        $response = Invoke-RestMethod -Uri "http://localhost:8080/api/v1/health" -Method GET
        Write-Host "‚úÖ Local API Status: $($response.status)" -ForegroundColor Green
        return $response
    }
    catch {
        Write-Host "‚ùå Local API not responding: $($_.Exception.Message)" -ForegroundColor Red
    }
}

function Test-AzureAPI {
    Write-Host "Testing Azure API..." -ForegroundColor Yellow
    try {
        $response = Invoke-RestMethod -Uri "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/health" -Method GET
        Write-Host "‚úÖ Azure API Status: $($response.status)" -ForegroundColor Green
        return $response
    }
    catch {
        Write-Host "‚ùå Azure API not responding: $($_.Exception.Message)" -ForegroundColor Red
    }
}

function Open-LocalDocs {
    Start-Process "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/docs"
    Write-Host "üåê Opening Local API Documentation..." -ForegroundColor Green
}

function Open-AzureDocs {
    Start-Process "https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/docs"  
    Write-Host "üåê Opening Azure API Documentation..." -ForegroundColor Green
}

# Export functions for use
# Note: These functions are available in the current session after running this script

Write-Host "`nüöÄ Available Functions:" -ForegroundColor Cyan
Write-Host "- Test-LocalAPI    : Test local API health" -ForegroundColor White
Write-Host "- Test-AzureAPI    : Test Azure API health" -ForegroundColor White  
Write-Host "- Open-LocalDocs   : Open local API documentation" -ForegroundColor White
Write-Host "- Open-AzureDocs   : Open Azure API documentation" -ForegroundColor White
