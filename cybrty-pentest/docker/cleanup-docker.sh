#!/bin/bash

# Docker Cleanup Script for Cybrty Pentest Platform
# DevOps Engineer: Expert Docker Management

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

echo -e "${BLUE}üßπ Cybrty Pentest Platform - Docker Cleanup${NC}"
echo -e "${BLUE}============================================${NC}"

# Function to print status
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Navigate to project root
cd "$PROJECT_ROOT"

# Parse command line arguments
FULL_CLEANUP=false
KEEP_DATA=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --full)
            FULL_CLEANUP=true
            shift
            ;;
        --keep-data)
            KEEP_DATA=true
            shift
            ;;
        -h|--help)
            echo "Usage: $0 [OPTIONS]"
            echo "Options:"
            echo "  --full       Full cleanup including images and volumes"
            echo "  --keep-data  Keep data volumes (OpenSearch, Ollama data)"
            echo "  -h, --help   Show this help message"
            exit 0
            ;;
        *)
            print_error "Unknown option: $1"
            exit 1
            ;;
    esac
done

print_status "Stopping all containers..."
docker-compose -f docker/docker-compose.yml down

if [ "$FULL_CLEANUP" = true ]; then
    print_status "Performing full cleanup..."
    
    # Stop and remove all containers
    print_status "Removing containers..."
    docker-compose -f docker/docker-compose.yml down --remove-orphans
    
    # Remove images
    print_status "Removing Docker images..."
    docker-compose -f docker/docker-compose.yml down --rmi all
    
    if [ "$KEEP_DATA" = false ]; then
        # Remove volumes
        print_warning "Removing all data volumes (this will delete all data)..."
        docker-compose -f docker/docker-compose.yml down --volumes
        
        # Clean up any remaining volumes
        print_status "Cleaning up remaining volumes..."
        docker volume ls -q | grep cybrty | xargs -r docker volume rm
    fi
    
    # Remove networks
    print_status "Removing networks..."
    docker network ls -q | grep pentest_network | xargs -r docker network rm
    
    # Clean up system
    print_status "Cleaning up Docker system..."
    docker system prune -f
    
else
    print_status "Performing basic cleanup (containers only)..."
    docker-compose -f docker/docker-compose.yml down --remove-orphans
fi

# Clean up local data directories if not keeping data
if [ "$KEEP_DATA" = false ] && [ "$FULL_CLEANUP" = true ]; then
    print_warning "Cleaning up local data directories..."
    rm -rf docker/data/opensearch/*
    rm -rf docker/data/ollama/*
    rm -rf data/artifacts/*
fi

print_status "‚úÖ Cleanup completed!"

if [ "$FULL_CLEANUP" = true ]; then
    if [ "$KEEP_DATA" = true ]; then
        print_status "üìä Data volumes preserved"
    else
        print_warning "üóëÔ∏è  All data has been removed"
    fi
fi

echo
print_status "üí° To start the platform again, run:"
echo -e "   ${YELLOW}./docker/start-docker.sh${NC}"
