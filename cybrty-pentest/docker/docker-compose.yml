# Docker Compose for Cybrty Pentest Service
# Azure Container Apps compatible

version: '3.8'

services:
  # Main API service
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - MODEL_PROVIDER=ollama
      - MODEL_NAME=deepseek-coder
      - OLLAMA_BASE_URL=http://ollama:11434
      - OPENSEARCH_HOST=opensearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_SCHEME=http
      - OPENSEARCH_INDEX_RUNS=cybrty-runs
      - OPENSEARCH_INDEX_ACTIONS=cybrty-actions
      - ARTIFACTS_DIR=/data/artifacts
      - POLICY_ALLOW_NETS=10.0.0.0/8,192.168.0.0/16
      - MSF_RPC_PASSWORD=changeme
    volumes:
      - ./config:/app/config:ro
      - artifacts_data:/data/artifacts
    depends_on:
      - opensearch
      - ollama
    networks:
      - pentest_network
    restart: unless-stopped
    labels:
      - "com.microsoft.aca.compose.enabled=true"
      - "com.microsoft.aca.compose.target-port=8080"

  # OpenSearch for logging and analytics
  opensearch:
    image: opensearchproject/opensearch:2.13.0
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - pentest_network
    restart: unless-stopped
    labels:
      - "com.microsoft.aca.compose.enabled=true"

  # OpenSearch Dashboards
  dashboards:
    image: opensearchproject/opensearch-dashboards:2.13.0
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      - opensearch
    networks:
      - pentest_network
    restart: unless-stopped
    labels:
      - "com.microsoft.aca.compose.enabled=true"
      - "com.microsoft.aca.compose.target-port=5601"

  # Ollama for local AI model
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - pentest_network
    restart: unless-stopped
    command: >
      sh -c "ollama serve &
             sleep 10 &&
             ollama pull deepseek-coder &&
             wait"
    labels:
      - "com.microsoft.aca.compose.enabled=true"

  # ZAP (optional - for web application testing)
  zap:
    image: owasp/zap2docker-stable
    ports:
      - "8090:8080"
    command: zap-webswing.sh
    environment:
      - ZAP_PROXY_PORT=8080
    networks:
      - pentest_network
    restart: unless-stopped
    profiles:
      - tools
    labels:
      - "com.microsoft.aca.compose.enabled=true"
      - "com.microsoft.aca.compose.target-port=8080"

  # Metasploit RPC (optional - for exploitation testing)
  msfrpcd:
    image: metasploitframework/metasploit-framework
    command: >
      sh -c "service postgresql start &&
             msfdb init &&
             msfrpcd -P changeme -S -f"
    environment:
      - MSF_RPC_PASSWORD=changeme
    ports:
      - "55552:55552"
    networks:
      - pentest_network
    restart: unless-stopped
    profiles:
      - tools
    labels:
      - "com.microsoft.aca.compose.enabled=true"

# Named volumes for data persistence
volumes:
  opensearch_data:
    driver: local
  ollama_data:
    driver: local
  artifacts_data:
    driver: local

# Network for service communication
networks:
  pentest_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
