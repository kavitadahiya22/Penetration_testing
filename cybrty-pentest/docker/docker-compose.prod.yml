# Production Docker Compose - API + OpenSearch
# Optimized for running together with minimal dependencies

version: '3.8'

services:
  # Main API service
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"  # Changed to port 8000
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - MODEL_PROVIDER=ollama
      - MODEL_NAME=deepseek-coder
      - OLLAMA_BASE_URL=http://ollama:11434
      - OPENSEARCH_HOST=opensearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_SCHEME=http
      - OPENSEARCH_INDEX_RUNS=cybrty-runs
      - OPENSEARCH_INDEX_ACTIONS=cybrty-actions
      - ARTIFACTS_DIR=/data/artifacts
      - POLICY_ALLOW_NETS=10.0.0.0/8,192.168.0.0/16,127.0.0.1/32
      - LOG_LEVEL=INFO
    volumes:
      - ./config:/app/config:ro
      - artifacts_data:/data/artifacts
    depends_on:
      opensearch:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - cybrty_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # OpenSearch for logging and analytics
  opensearch:
    image: opensearchproject/opensearch:2.13.0
    environment:
      - cluster.name=cybrty-cluster
      - node.name=cybrty-node1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "logger.level=WARN"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
    networks:
      - cybrty_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # OpenSearch Dashboards (optional but useful)
  dashboards:
    image: opensearchproject/opensearch-dashboards:2.13.0
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
      - "LOGGING_QUIET=true"
    depends_on:
      opensearch:
        condition: service_healthy
    networks:
      - cybrty_network
    restart: unless-stopped
    profiles:
      - dashboards
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Ollama for local AI model
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=24h
    networks:
      - cybrty_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Model initialization service (runs once to pull models)
  model-init:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - OLLAMA_HOST=http://ollama:11434
    command: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        sleep 10 &&
        echo 'Pulling deepseek-coder model...' &&
        ollama pull deepseek-coder:latest &&
        echo 'Model initialization complete!'
      "
    networks:
      - cybrty_network
    restart: "no"
    profiles:
      - init

# Named volumes for data persistence
volumes:
  opensearch_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/opensearch
  ollama_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/ollama
  artifacts_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/artifacts

# Network for service communication
networks:
  cybrty_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
