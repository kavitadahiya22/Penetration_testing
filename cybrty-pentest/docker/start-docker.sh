#!/bin/bash

# Enhanced Docker Startup Script for Cybrty Pentest Platform
# DevOps Engineer: Expert Docker Configuration

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

echo -e "${BLUE}🚀 Cybrty Pentest Platform - Docker Startup${NC}"
echo -e "${BLUE}============================================${NC}"

# Function to print status
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    print_error "Docker is not running. Please start Docker Desktop and try again."
    exit 1
fi

# Check if docker-compose is available
if ! command -v docker-compose &> /dev/null; then
    print_error "docker-compose is not installed. Please install Docker Compose and try again."
    exit 1
fi

# Navigate to project root
cd "$PROJECT_ROOT"

print_status "Starting Cybrty Pentest Platform..."

# Create necessary directories
print_status "Creating necessary directories..."
mkdir -p data/artifacts
mkdir -p docker/data/opensearch
mkdir -p docker/data/ollama

# Set proper permissions
chmod 755 data/artifacts
chmod 755 docker/data/opensearch
chmod 755 docker/data/ollama

# Check if .env file exists, create if not
if [ ! -f .env ]; then
    print_warning ".env file not found. Creating from .env.example..."
    if [ -f .env.example ]; then
        cp .env.example .env
        print_status ".env file created from .env.example"
    else
        print_warning "No .env.example found. Using default configuration."
    fi
fi

# Start the enhanced logging system
print_status "Starting Enhanced Logging System with OpenSearch..."

# Build and start services
print_status "Building Docker images (this may take a few minutes)..."
docker-compose -f docker/docker-compose.yml build --no-cache

print_status "Starting all services..."
docker-compose -f docker/docker-compose.yml up -d

# Wait for services to be healthy
print_status "Waiting for services to start..."
sleep 10

# Check service health
print_status "Checking service health..."

# Check OpenSearch
print_status "Checking OpenSearch..."
max_attempts=30
attempt=1
while [ $attempt -le $max_attempts ]; do
    if curl -s http://localhost:9200/_cluster/health > /dev/null 2>&1; then
        print_status "✅ OpenSearch is healthy"
        break
    else
        if [ $attempt -eq $max_attempts ]; then
            print_error "❌ OpenSearch failed to start after $max_attempts attempts"
            docker-compose -f docker/docker-compose.yml logs opensearch
            exit 1
        fi
        print_warning "⏳ OpenSearch not ready yet (attempt $attempt/$max_attempts)..."
        sleep 5
        ((attempt++))
    fi
done

# Check Ollama
print_status "Checking Ollama..."
max_attempts=60  # Ollama may take longer to download models
attempt=1
while [ $attempt -le $max_attempts ]; do
    if curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
        print_status "✅ Ollama is healthy"
        break
    else
        if [ $attempt -eq $max_attempts ]; then
            print_error "❌ Ollama failed to start after $max_attempts attempts"
            docker-compose -f docker/docker-compose.yml logs ollama
            exit 1
        fi
        print_warning "⏳ Ollama not ready yet (attempt $attempt/$max_attempts)..."
        sleep 5
        ((attempt++))
    fi
done

# Check API
print_status "Checking Cybrty Pentest API..."
max_attempts=30
attempt=1
while [ $attempt -le $max_attempts ]; do
    if curl -s http://localhost:8080/api/v1/health > /dev/null 2>&1; then
        print_status "✅ Cybrty Pentest API is healthy"
        break
    else
        if [ $attempt -eq $max_attempts ]; then
            print_error "❌ Cybrty Pentest API failed to start after $max_attempts attempts"
            docker-compose -f docker/docker-compose.yml logs api
            exit 1
        fi
        print_warning "⏳ Cybrty Pentest API not ready yet (attempt $attempt/$max_attempts)..."
        sleep 5
        ((attempt++))
    fi
done

# Show service status
echo
print_status "🎉 All services are running successfully!"
echo
echo -e "${BLUE}📊 Service URLs:${NC}"
echo -e "   🔗 Cybrty Pentest API:      ${GREEN}http://localhost:8080${NC}"
echo -e "   📚 API Documentation:       ${GREEN}http://localhost:8080/docs${NC}"
echo -e "   🔍 OpenSearch:               ${GREEN}http://localhost:9200${NC}"
echo -e "   📈 OpenSearch Dashboards:    ${GREEN}http://localhost:5601${NC}"
echo -e "   🤖 Ollama:                   ${GREEN}http://localhost:11434${NC}"
echo
echo -e "${BLUE}🚀 Enhanced Analytics Endpoints:${NC}"
echo -e "   📊 Dashboard Data:           ${GREEN}http://localhost:8080/api/v1/analytics/dashboard${NC}"
echo -e "   👥 Agent Performance:        ${GREEN}http://localhost:8080/api/v1/analytics/agents/performance${NC}"
echo -e "   🔒 Security Events:          ${GREEN}http://localhost:8080/api/v1/analytics/security/events${NC}"
echo -e "   📋 Task Executions:          ${GREEN}http://localhost:8080/api/v1/analytics/tasks/executions${NC}"
echo
echo -e "${BLUE}💡 Quick Commands:${NC}"
echo -e "   📋 View logs:                ${YELLOW}docker-compose -f docker/docker-compose.yml logs -f${NC}"
echo -e "   🛑 Stop services:            ${YELLOW}docker-compose -f docker/docker-compose.yml down${NC}"
echo -e "   🔄 Restart services:         ${YELLOW}docker-compose -f docker/docker-compose.yml restart${NC}"
echo -e "   🧹 Clean up:                 ${YELLOW}./docker/cleanup-docker.sh${NC}"
echo
echo -e "${GREEN}✅ Setup complete! The Cybrty Pentest Platform is ready for testing.${NC}"

# Optional: Show container status
echo
print_status "Container Status:"
docker-compose -f docker/docker-compose.yml ps
