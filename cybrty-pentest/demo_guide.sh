#!/bin/bash
"""
Cybrty Pentest Platform - Complete Testing & Demo Guide
=====================================================

This script provides comprehensive testing examples and manual verification steps.
"""

echo "üöÄ CYBRTY PENTEST PLATFORM - COMPREHENSIVE TESTING GUIDE"
echo "=========================================================="
echo
echo "üìä Current System Status:"
echo "========================="

# Check all services
echo "üîç Service Health Checks:"
echo -n "API Health: "
curl -s -w "%{http_code}" https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/health -o /dev/null
echo

echo -n "OpenSearch Health: "
curl -s -w "%{http_code}" http://localhost:9200/_cluster/health -o /dev/null  
echo

echo -n "Ollama Health: "
curl -s -w "%{http_code}" http://localhost:11434/api/version -o /dev/null
echo

echo -n "Dashboards: "
curl -s -w "%{http_code}" http://localhost:5601 -o /dev/null
echo

echo
echo "ü§ñ AI Model Status:"
echo "==================="
curl -s https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/models/status | python3 -c "
import json, sys
try:
    data = json.load(sys.stdin)
    ollama = data.get('ollama', {})
    print(f'Ollama Running: {ollama.get(\"running\", False)}')
    print(f'Models Available: {ollama.get(\"models\", [])}')
    config = data.get('current_config', {})
    print(f'Active Provider: {config.get(\"provider\", \"unknown\")}')
    print(f'Active Model: {config.get(\"model_name\", \"unknown\")}')
except:
    print('Error reading model status')
"

echo
echo "üéØ READY FOR TESTING!"
echo "====================="
echo
echo "üîó Access URLs:"
echo "  API Documentation: https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/docs"
echo "  OpenSearch Dashboards: http://localhost:5601"
echo "  API Base: https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io"
echo "  OpenSearch: http://localhost:9200"
echo "  Ollama: http://localhost:11434"
echo
echo "üìù Manual Test Commands:"
echo "========================"
echo
echo "1. üß† Generate AI Pentest Plan:"
echo "   curl -X POST https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/agents/pentest/plan \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{"
echo "          \"targets\": [\"192.168.1.100\"],"
echo "          \"depth\": \"standard\","
echo "          \"features\": [\"recon\", \"web\"],"
echo "          \"simulate\": true,"
echo "          \"tenant_id\": \"demo-test\""
echo "        }'"
echo
echo "2. üèÉ Run Simulation Test:"
echo "   curl -X POST https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/agents/pentest/run \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{"
echo "          \"tenant_id\": \"demo-test\","
echo "          \"inputs\": {"
echo "            \"targets\": [\"192.168.1.100\"],"
echo "            \"depth\": \"quick\","
echo "            \"features\": [\"recon\"],"
echo "            \"simulate\": true"
echo "          }"
echo "        }'"
echo
echo "3. üîÑ Switch AI Models:"
echo "   curl -X POST https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/models/switch \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{"
echo "          \"provider\": \"ollama\","
echo "          \"model_name\": \"deepseek-coder\""
echo "        }'"
echo
echo "4. üìä Check Analytics:"
echo "   curl https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/analytics/dashboard"
echo
echo "5. üìã Get Available Tools:"
echo "   curl https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/api/v1/catalog"
echo
echo "6. üîç Monitor OpenSearch:"
echo "   curl http://localhost:9200/_cat/indices"
echo "   curl http://localhost:9200/cybrty-*/_search?size=5"
echo
echo "üéÆ Interactive Testing:"
echo "======================="
echo "Open these URLs in your browser:"
echo "‚Ä¢ API Docs: https://docker-api-ca.wonderfuldune-e921120d.eastus.azurecontainerapps.io/docs"
echo "‚Ä¢ Dashboards: http://localhost:5601"
echo
echo "üí° Tips:"
echo "========"
echo "‚Ä¢ First AI requests may take 30-60 seconds (model loading)"
echo "‚Ä¢ Use simulation mode for safe testing"
echo "‚Ä¢ Check Docker logs: docker logs docker-api-1"
echo "‚Ä¢ Monitor resources: docker stats"
echo
echo "‚úÖ Platform is ready for End-to-End testing!"
