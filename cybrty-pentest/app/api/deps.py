"""Dependency injection for FastAPI application."""

from functools import lru_cache
from typing import Annotated

from fastapi import Depends

from ..core.config import Settings, get_settings
from ..core.logger import OpenSearchLogger, get_opensearch_logger
from ..core.planner import PentestPlanner


@lru_cache()
def get_cached_settings() -> Settings:
    """Get cached application settings."""
    return get_settings()


def get_planner(settings: Annotated[Settings, Depends(get_cached_settings)]) -> PentestPlanner:
    """Get pentesting planner instance."""
    return PentestPlanner(settings)


def get_logger(settings: Annotated[Settings, Depends(get_cached_settings)]) -> OpenSearchLogger:
    """Get OpenSearch logger instance."""
    return get_opensearch_logger(settings)


# Dependency aliases for easier use
SettingsDep = Annotated[Settings, Depends(get_cached_settings)]
PlannerDep = Annotated[PentestPlanner, Depends(get_planner)]
LoggerDep = Annotated[OpenSearchLogger, Depends(get_logger)]
