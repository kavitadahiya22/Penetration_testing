"""Test tool output parsers."""

from app.tools.utils import parse_nmap_xml, parse_amass_output, parse_nikto_output


def test_nmap_xml_parser():
    """Test Nmap XML parsing."""
    sample_xml = '''<?xml version="1.0" encoding="UTF-8"?>
    <nmaprun>
        <host>
            <status state="up"/>
            <address addr="10.0.0.1" addrtype="ipv4"/>
            <hostnames>
                <hostname name="test.example.com"/>
            </hostnames>
            <ports>
                <port protocol="tcp" portid="22">
                    <state state="open"/>
                    <service name="ssh" version="OpenSSH 8.0"/>
                </port>
                <port protocol="tcp" portid="80">
                    <state state="open"/>
                    <service name="http"/>
                </port>
            </ports>
        </host>
    </nmaprun>'''
    
    result = parse_nmap_xml(sample_xml)
    
    assert result["hosts_up"] == 1
    assert result["hosts_total"] == 1
    assert len(result["hosts"]) == 1
    assert len(result["services"]) == 2
    
    host = result["hosts"][0]
    assert host["ip"] == "10.0.0.1"
    assert "test.example.com" in host["hostnames"]
    assert len(host["ports"]) == 2


def test_amass_output_parser():
    """Test Amass output parsing."""
    sample_output = """
    example.com
    www.example.com
    mail.example.com
    admin.example.com
    api.v1.example.com
    """
    
    result = parse_amass_output(sample_output)
    
    assert result["total_found"] == 5
    assert "example.com" in result["domains"]
    assert "www.example.com" in result["subdomains"]
    assert "api.v1.example.com" in result["subdomains"]


def test_nikto_output_parser():
    """Test Nikto output parsing."""
    sample_output = """
    - Nikto v2.1.6
    ---------------------------------------------------------------------------
    + Target IP:          10.0.0.1
    + Target Hostname:    example.com
    + Target Port:        80
    + Start Time:         2024-01-01 12:00:00 (GMT0)
    ---------------------------------------------------------------------------
    + Server: Apache/2.4.41
    + Retrieved x-powered-by header: PHP/7.4.0
    + The anti-clickjacking X-Frame-Options header is not present.
    + The X-XSS-Protection header is not defined.
    + Uncommon header 'x-redirect-by' found, with contents: WordPress
    + No CGI Directories found (use '-C all' to force check all possible dirs)
    + Apache/2.4.41 appears to be outdated (current is at least Apache/2.4.54).
    + Allowed HTTP Methods: GET, HEAD, POST, OPTIONS
    + /admin/: Admin login page/section found.
    + /backup/: Backup directory found.
    + 7535 requests: 0 error(s) and 8 item(s) reported on remote host
    + End Time:           2024-01-01 12:05:00 (GMT0) (300 seconds)
    """
    
    result = parse_nikto_output(sample_output)
    
    assert result["target"] == "10.0.0.1"
    assert result["total_findings"] > 0
    assert len(result["findings"]) > 0
    
    # Check severity classification
    assert result["severity_counts"]["info"] > 0
    
    # Check for admin finding (should be medium severity)
    admin_findings = [f for f in result["findings"] if "admin" in f["description"].lower()]
    assert len(admin_findings) > 0


def test_parser_error_handling():
    """Test parser error handling."""
    # Test invalid XML
    result = parse_nmap_xml("invalid xml")
    assert "error" in result
    assert result["hosts_up"] == 0
    
    # Test empty Amass output
    result = parse_amass_output("")
    assert result["total_found"] == 0
    assert len(result["domains"]) == 0
    
    # Test empty Nikto output
    result = parse_nikto_output("")
    assert result["total_findings"] == 0
